{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/editable-invoice/editable-invoice.component.css","webpack:///./src/app/editable-invoice/editable-invoice.component.html","webpack:///./src/app/editable-invoice/editable-invoice.component.ts","webpack:///./src/app/invoice.service.ts","webpack:///./src/app/invoices/invoice.ts","webpack:///./src/app/invoices/invoices.component.css","webpack:///./src/app/invoices/invoices.component.html","webpack:///./src/app/invoices/invoices.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,qGAAqG,SAAS,kD;;;;;;;;;;;;;;;;;ACApE;AAO1C;IALA;QAME,UAAK,GAAG,UAAU,CAAC;IACrB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AACW;AAET;AACmB;AACuB;AAgBzF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,8EAAiB;gBACjB,qGAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;gBACX,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACvBtB,+DAA+D,uK;;;;;;;;;;;ACA/D,8CAA8C,oBAAoB,iCAAiC,oBAAoB,iCAAiC,qBAAqB,iCAAiC,qBAAqB,iCAAiC,qBAAqB,iCAAiC,qBAAqB,iCAAiC,gBAAgB,iCAAiC,eAAe,iCAAiC,mBAAmB,ysBAAysB,2BAA2B,e;;;;;;;;;;;;;;;;;;ACAhpC;AACZ;AAO5C;IAKE;QAFA,aAAQ,GAAG,KAAK,CAAC;IAED,CAAC;IAEjB,yCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,GAAG,CAAE,IAAI,CAAC,QAAQ,CAAC;IAClC,CAAC;IAED,2CAAQ,GAAR;IACA,CAAC;IAVQ;QAAR,2DAAK,EAAE;wEAAU,yDAAO;6DAAC;IAFf,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,oIAAgD;;SAEjD,CAAC;;OACW,wBAAwB,CAcpC;IAAD,+BAAC;CAAA;AAdoC;;;;;;;;;;;;;;;;;;;ACRM;AAGO;AAMlD;IAIE,wBAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAF1C,aAAQ,GAAG,SAAS,CAAC;IAEyB,CAAC;IAE/C,oCAAW,GAAX;QACE,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAY,GAAG,CAAC,CAAC;IAE7C,CAAC;IAVU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAKgC,+DAAU;OAJ/B,cAAc,CAW1B;IAAD,qBAAC;CAAA;AAX0B;;;;;;;;;;;;;ACT3B;AAAA;AAAA;IAAA;QAGI,aAAQ,GAAc,CAAC,cAAc,EAAE,eAAe,EAAE,kBAAkB,CAAC,CAAC;IAKhF,CAAC;IAAD,cAAC;AAAD,CAAC;;AAAA,CAAC;;;;;;;;;;;;ACRF,+DAA+D,mJ;;;;;;;;;;;ACA/D,uDAAuD,4BAA4B,kWAAkW,2+B;;;;;;;;;;;;;;;;;;ACAnY;AAEC;AAOnD;IAcE,2BAAqB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAVnD,eAAU,GAAa;YACrB,UAAU,EAAG,IAAI;YACjB,UAAU,EAAG,IAAI;YACjB,QAAQ,EAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YAC7B,WAAW,EAAG,IAAI;YAClB,MAAM,EAAG,IAAI;YACb,KAAK,EAAG,IAAI;YACZ,SAAS,EAAG,IAAI;SACjB,CAAC;IAEqD,CAAC;IAGxD,sCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,GAAG;YAChB,UAAU,EAAG,IAAI;YACjB,UAAU,EAAG,IAAI;YACjB,QAAQ,EAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YAC7B,WAAW,EAAG,IAAI;YAClB,MAAM,EAAG,IAAI;YACb,KAAK,EAAG,IAAI;YACZ,SAAS,EAAG,IAAI;SACjB;IAEH,CAAC;IAAA,CAAC;IAEF,uCAAW,GAAX;QAAA,iBAKC;QAJC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE;aAChC,SAAS,CAAC,UAAC,QAAQ;YAClB,KAAI,CAAC,QAAQ,GAAC,QAAQ,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAxCU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAeqC,+DAAc;OAdxC,iBAAiB,CA0C7B;IAAD,wBAAC;CAAA;AA1C6B;;;;;;;;;;;;;ACT9B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n  <h1>\\n    {{ title }}!\\n  </h1>\\n  <app-invoices></app-invoices>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Invoices';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { InvoicesComponent } from './invoices/invoices.component';\nimport { EditableInvoiceComponent } from './editable-invoice/editable-invoice.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InvoicesComponent,\n    EditableInvoiceComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXRhYmxlLWludm9pY2UvZWRpdGFibGUtaW52b2ljZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<td *ngIf=\\\"!editable\\\">{{invoice.id_invoice}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.id_project}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.supplier[0]}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.supplier[1]}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.supplier[2]}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.description}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.amount}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.state}}</td>\\n<td *ngIf=\\\"!editable\\\">{{invoice.id_credit}}</td>\\n\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.id_invoice\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.id_project\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.supplier[0]\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.supplier[1]\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.supplier[2]\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.description\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.amount\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.state\\\"/></td>\\n<td *ngIf=\\\"editable\\\"><input [(ngModel)]=\\\"invoice.id_credit\\\"/></td>\\n\\n\\n<td><button class=\\\"btn\\\" (click)=\\\"onEdit()\\\">{{editable ? 'Save': 'Edit'}}</button></td>\"","import { Component, OnInit, Input} from '@angular/core';\nimport {Invoice} from '../invoices/invoice';\n\n@Component({\n  selector: '[app-editable-invoice]',\n  templateUrl: './editable-invoice.component.html',\n  styleUrls: ['./editable-invoice.component.css']\n})\nexport class EditableInvoiceComponent implements OnInit {\n\n  @Input() invoice: Invoice;\n  editable = false;\n\n  constructor() { }\n\n  onEdit(){\n    this.editable = ! this.editable;\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Invoice } from './invoices/invoice';\nimport { INVOICES } from './mock-invoices';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n\n  serveUrl = \"/api/v1\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  getInvoices(): Observable<Invoice[]> {\n    const url = this.serveUrl + \"/invoices\";\n    return this.httpClient.get<Invoice[]>(url);\n\n  }\n}\n","export class Invoice{\r\n    id_invoice : number;\r\n    id_project : number;\r\n    supplier : string[] = ['supplier_cif', 'supplier_name', 'supplier_address'];\r\n    description : string;\r\n    amount : number;\r\n    state : boolean;\r\n    id_credit : number; \r\n};\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2VzL2ludm9pY2VzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"selectedInvoice\\\">\\n  {{selectedInvoice.id_invoice}}\\n</div>\\n\\n\\n<table class=\\\"table\\\">\\n  <thead>\\n      <tr>\\n          <th>Invoice</th>\\n          <th>Project</th>\\n          <th>Supplier CIF</th>\\n          <th>Supplier Name</th>\\n          <th>Supplier Address</th>\\n          <th>Description</th>\\n          <th>Amount</th>\\n          <th>State</th>\\n          <th>Credit</th>\\n          <th>&nbsp;</th>\\n      </tr>\\n  </thead>\\n\\n  <tr>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.id_invoice\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.id_project\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.supplier[0]\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.supplier[1]\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.supplier[2]\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.description\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.amount\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.state\\\"></td>\\n    <td><input class=\\\"form-control\\\" [(ngModel)]=\\\"newInvoice.id_credit\\\"></td>\\n    <td><button class=\\\"btn btn-primary\\\" (click)=\\\"addInvoice()\\\">Add Invoice</button> </td>\\n</tr>    \\n\\n<tr *ngFor=\\\"let invoice of invoices\\\" app-editable-invoice [invoice] = \\\"invoice\\\">\\n</tr>    \\n</table>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Invoice } from './invoice';\nimport { InvoiceService} from '../invoice.service';\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.css']\n})\nexport class InvoicesComponent implements OnInit {\n\n  invoices : Invoice[];\n  selectedInvoice : Invoice;\n  newInvoice : Invoice = {\n    id_invoice : null,\n    id_project : null,\n    supplier : [null, null, null],\n    description : null,\n    amount : null,\n    state : null,\n    id_credit : null\n  };\n\n  constructor( private invoiceService: InvoiceService) { }\n\n\n  addInvoice() {\n    this.invoices.push(this.newInvoice);\n    this.newInvoice = {\n      id_invoice : null,\n      id_project : null,\n      supplier : [null, null, null],\n      description : null,\n      amount : null,\n      state : null,\n      id_credit : null\n    }\n\n  };\n\n  getInvoices() {\n    this.invoiceService.getInvoices()\n    .subscribe((invoices) => {\n      this.invoices=invoices;\n    });\n  }\n\n  ngOnInit() {\n    this.getInvoices();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}